diff -dur jlint-3.1.ORIG/jlint.cc jlint-3.1/jlint.cc
--- jlint-3.1.ORIG/jlint.cc	2006-10-13 01:04:24.000000000 -0600
+++ jlint-3.1/jlint.cc	2007-04-24 09:24:21.000000000 -0600
@@ -138,7 +138,7 @@
 
 void format_message(int code, utf_string const& file, int line, __VALIST ap)
 {
-  static int loop_id;
+  static long loop_id;
   static message_node *first, *last;
   static char* compound_message;
   const void* parameter[MAX_MSG_PARAMETERS];
@@ -151,7 +151,7 @@
     if (compound_message != NULL
         && ((loop_id != 0 
              && ((code != msg_loop && code != msg_sync_loop)
-                 || (int)parameter[2] != loop_id))
+                 || (long)parameter[2] != loop_id))
             || (loop_id == 0 && code != msg_wait_path)))
       {
         if (!message_node::find(compound_message)) { 
@@ -226,7 +226,7 @@
                            name.as_asciz()); 
             break;
           case 'd': // integer
-            dst += sprintf(dst, "%d", (int)parameter[index]);  
+            dst += sprintf(dst, "%ld", (long)parameter[index]);  
             break;
           default:
             assert(false/*bad message parameter format*/);
@@ -238,7 +238,7 @@
                 && (code != msg_loop || index > 3))
               {
                 // Do not inlude loop number in history message
-                hp += sprintf(hp, ":%.*s", dst - save_dst, save_dst);
+                hp += sprintf(hp, ":%.*s", (int)(dst - save_dst), save_dst);
               }
           }
         } else { 
@@ -262,7 +262,7 @@
               compound_message = strdup(his_buf);
               first = last = new message_node(msg_buf);
               if (code != msg_wait) { 
-                loop_id = (int)parameter[2];
+                loop_id = (long)parameter[2];
               }
             } else if (!message_node::find(his_buf)) { 
               fprintf(stdout, "%s\n", msg_buf);
diff -dur jlint-3.1.ORIG/types.hh jlint-3.1/types.hh
--- jlint-3.1.ORIG/types.hh	2006-10-13 00:52:50.000000000 -0600
+++ jlint-3.1/types.hh	2007-04-24 09:19:59.000000000 -0600
@@ -9,32 +9,19 @@
 #include <string>
 #include <vector>
 #include <stddef.h>
+#include <stdint.h>
 
-typedef int      int4;
-typedef unsigned nat4;
+typedef int32_t  int4;
+typedef uint32_t nat4;
+typedef int64_t  int8;
+typedef uint64_t nat8;
 
-#if defined(__GNUC__)
 #define INT8_DEFINED 1
-typedef long long          int8;
-typedef unsigned long long nat8;
-#else
-#if defined(_WIN32)
-#define INT8_DEFINED 1
-typedef __int64 int8;
-typedef unsigned __int64 nat8;
-#else
-#if defined(__osf__ )
-#define INT8_DEFINED 1
-typedef   signed long int8;
-typedef unsigned long nat8;
-#endif
-#endif
-#endif
 
 #define nobreak 
 
-typedef unsigned char  byte;
-typedef unsigned short word;
+typedef uint8_t  byte;
+typedef uint16_t word;
 
 enum vbm_instruction_code { 
 #define JAVA_INSN(code, mnem, len) mnem,
